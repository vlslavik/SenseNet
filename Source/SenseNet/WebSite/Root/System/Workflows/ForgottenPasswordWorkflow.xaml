<Activity mc:Ignorable="sap" x:Class="SenseNet.Workflow.Definitions.ForgottenPasswordWorkflow" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mv="clr-namespace:Microsoft.VisualBasic;assembly=System" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:s1="clr-namespace:System;assembly=System" xmlns:s2="clr-namespace:System;assembly=System.Xml" xmlns:s3="clr-namespace:System;assembly=System.Core" xmlns:s4="clr-namespace:System;assembly=System.ServiceModel" xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities" xmlns:sad="clr-namespace:System.Activities.Debugger;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sc="clr-namespace:SenseNet.ContentRepository;assembly=SenseNet.ContentRepository" xmlns:sc1="clr-namespace:SenseNet.ContentRepository;assembly=SenseNet.Storage" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System" xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System.ServiceModel" xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=System.Core" xmlns:scg3="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:scs="clr-namespace:SenseNet.ContentRepository.Storage;assembly=SenseNet.Storage" xmlns:scsa="clr-namespace:SenseNet.ContentRepository.Security.ADSync;assembly=SenseNet.ContentRepository" xmlns:scss="clr-namespace:SenseNet.ContentRepository.Storage.Security;assembly=SenseNet.Storage" xmlns:scss1="clr-namespace:SenseNet.ContentRepository.Storage.Schema;assembly=SenseNet.Storage" xmlns:scw="clr-namespace:SenseNet.ContentRepository.Workspaces;assembly=SenseNet.ContentRepository" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sl="clr-namespace:System.Linq;assembly=System.Core" xmlns:sp="clr-namespace:SenseNet.Portal;assembly=SenseNet.Portal" xmlns:ssi="clr-namespace:SenseNet.Search.Indexing;assembly=SenseNet.Portal" xmlns:ssi1="clr-namespace:SenseNet.Search.Indexing;assembly=SenseNet.ContentRepository" xmlns:st="clr-namespace:System.Text;assembly=mscorlib" xmlns:sw="clr-namespace:SenseNet.Workflow;assembly=SenseNet.Workflow" xmlns:swa="clr-namespace:SenseNet.Workflow.Activities;assembly=SenseNet.Workflow" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="StateContent" Type="InArgument(sw:WfContent)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>419,1018</sap:VirtualizedContainerService.HintSize>
  <mva:VisualBasic.Settings>Assembly references and imported namespaces for internal implementation</mva:VisualBasic.Settings>
  <Sequence DisplayName="Main" sad:XamlDebuggerXmlReader.FileName="D:\Dev\SN\SenseNet\Development\Budapest\Source\SenseNet\WF\ForgottenPasswordWorkflow.xaml" sap:VirtualizedContainerService.HintSize="379,978">
    <Sequence.Variables>
      <Variable x:TypeArguments="sw:WfContent" Name="ForgottenItem" />
      <Variable x:TypeArguments="sw:WfContent" Name="ApprovalTask" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="ValidDelayDays" />
      <Variable x:TypeArguments="x:Int32" Default="7" Name="CleanupDelayDays" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg3:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg3:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <swa:CreateContent ContentDisplayName="{x:Null}" ContentTypeName="[&quot;CustomListItem&quot;]" DisplayName="CreateContent" FieldValues="[New Dictionary(Of String, Object) From {&#xA;    {&quot;Description&quot;, StateContent(&quot;EmailForPassword&quot;)},&#xA;    {&quot;ValidTill&quot;, Date.Now.AddDays(ValidDelayDays)}&#xA;}]" sap:VirtualizedContainerService.HintSize="357,191" Name="[SenseNet.ContentRepository.Tools.GetRandomString(64)]" ParentPath="[SenseNet.Portal.Site.GetSiteByNodePath(StateContent.Path).Path + &quot;/login/ForgottenPassword/ForgottenItems&quot;]" Result="[ForgottenItem]">
      <sap:WorkflowViewStateService.ViewState>
        <scg3:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg3:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </swa:CreateContent>
    <InvokeMethod sap:VirtualizedContainerService.HintSize="357,130" MethodName="SetPermission">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="sw:WfContent">[ForgottenItem]</InArgument>
      </InvokeMethod.TargetObject>
      <InArgument x:TypeArguments="scss:IUser">[User.Visitor]</InArgument>
      <InArgument x:TypeArguments="scss1:PermissionType">[PermissionType.Open]</InArgument>
      <InArgument x:TypeArguments="scss:PermissionValue">[PermissionValue.Allow]</InArgument>
    </InvokeMethod>
    <InvokeMethod sap:VirtualizedContainerService.HintSize="357,130" MethodName="SetPermission">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="sw:WfContent">[ForgottenItem]</InArgument>
      </InvokeMethod.TargetObject>
      <InArgument x:TypeArguments="scss:IUser">[User.Visitor]</InArgument>
      <InArgument x:TypeArguments="scss1:PermissionType">[PermissionType.RunApplication]</InArgument>
      <InArgument x:TypeArguments="scss:PermissionValue">[PermissionValue.Allow]</InArgument>
    </InvokeMethod>
    <swa:SendMail IsBodyHtml="{x:Null}" Address="[CStr(StateContent(&quot;EmailForPassword&quot;))]" Body="[&quot;Dear customer,&quot; + Environment.NewLine +&#xA;&quot;You may change your password on this page: &quot; +&#xA;StateContent(&quot;OwnerSiteUrl&quot;).ToString() + ForgottenItem.Path.Substring(Site.GetSiteByNodePath(ForgottenItem.Path).Path.Length) +&#xA;Environment.NewLine + Environment.NewLine +&#xA;&quot;If you did not request this email, please ignore and delete it.&quot;]" DisplayName="Send notification mail" sap:VirtualizedContainerService.HintSize="357,22" Subject="Password change" />
    <Pick DisplayName="Wait for forgotten item" sap:VirtualizedContainerService.HintSize="554,97">
      <sap:WorkflowViewStateService.ViewState>
        <scg3:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg3:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <PickBranch DisplayName="Item changed" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg3:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg3:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <PickBranch.Trigger>
          <swa:WaitForContentChanged ContentPath="[ForgottenItem.Path]" sap:VirtualizedContainerService.HintSize="200,100" />
        </PickBranch.Trigger>
      </PickBranch>
      <PickBranch DisplayName="Timed out" sap:VirtualizedContainerService.HintSize="230,318">
        <sap:WorkflowViewStateService.ViewState>
          <scg3:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg3:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <PickBranch.Trigger>
          <Delay Duration="[TimeSpan.FromDays(CleanupDelayDays)]" sap:VirtualizedContainerService.HintSize="200,100" />
        </PickBranch.Trigger>
      </PickBranch>
    </Pick>
    <InvokeMethod sap:VirtualizedContainerService.HintSize="357,130" MethodName="Delete">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="sw:WfContent">[ForgottenItem]</InArgument>
      </InvokeMethod.TargetObject>
    </InvokeMethod>
  </Sequence>
</Activity>