// ------------------------------------------------------------------------------
//<autogenerated>
//        This code was generated by Microsoft Visual Studio Team System 2005.
//
//        Changes to this file may cause incorrect behavior and will be lost if
//        the code is regenerated.
//</autogenerated>
//------------------------------------------------------------------------------
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Web.UI;

namespace SenseNet.ContentRepository.Tests
{
	[System.Diagnostics.DebuggerStepThrough()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
	internal class SenseNet_ContentRepository_StorageData_ITransactionProviderAccessor : BaseAccessor
	{

		protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("SenseNet.Storage", "SenseNet.ContentRepository.Storage.Data.ITransactionProvider");

		internal SenseNet_ContentRepository_StorageData_ITransactionProviderAccessor(object target) :
			base(target, m_privateType)
		{
		}

		internal global::System.Data.IsolationLevel IsolationLevel
		{
			get
			{
				global::System.Data.IsolationLevel ret = ((global::System.Data.IsolationLevel)(m_privateObject.GetProperty("IsolationLevel")));
				return ret;
			}
		}

		internal void Begin(global::System.Data.IsolationLevel isolationLevel)
		{
			object[] args = new object[] {
                isolationLevel};
			m_privateObject.Invoke("Begin", new System.Type[] {
                    typeof(global::System.Data.IsolationLevel)}, args);
		}

		internal void Commit()
		{
			object[] args = new object[0];
			m_privateObject.Invoke("Commit", new System.Type[0], args);
		}

		internal void Rollback()
		{
			object[] args = new object[0];
			m_privateObject.Invoke("Rollback", new System.Type[0], args);
		}
	}
	[System.Diagnostics.DebuggerStepThrough()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
	internal class SenseNet_ContentRepository_Storage_Search_OperatorAccessor : BaseAccessor
	{

		protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("SenseNet.Storage", "SenseNet.ContentRepository.Storage.Search.Operator");

		internal SenseNet_ContentRepository_Storage_Search_OperatorAccessor(object target) :
			base(target, m_privateType)
		{
		}

		internal static global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor Equal
		{
			get
			{
				object _ret_val = m_privateType.GetStaticField("Equal");
				global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor _ret = null;
				if ((_ret_val != null))
				{
					_ret = new global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor(_ret_val);
				}
				global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor ret = _ret;
				return ret;
			}
		}

		internal static global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor NotEqual
		{
			get
			{
				object _ret_val = m_privateType.GetStaticField("NotEqual");
				global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor _ret = null;
				if ((_ret_val != null))
				{
					_ret = new global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor(_ret_val);
				}
				global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor ret = _ret;
				return ret;
			}
		}

		internal static global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor LessThan
		{
			get
			{
				object _ret_val = m_privateType.GetStaticField("LessThan");
				global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor _ret = null;
				if ((_ret_val != null))
				{
					_ret = new global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor(_ret_val);
				}
				global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor ret = _ret;
				return ret;
			}
		}

		internal static global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor GreaterThan
		{
			get
			{
				object _ret_val = m_privateType.GetStaticField("GreaterThan");
				global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor _ret = null;
				if ((_ret_val != null))
				{
					_ret = new global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor(_ret_val);
				}
				global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor ret = _ret;
				return ret;
			}
		}

		internal static global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor LessThanOrEqual
		{
			get
			{
				object _ret_val = m_privateType.GetStaticField("LessThanOrEqual");
				global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor _ret = null;
				if ((_ret_val != null))
				{
					_ret = new global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor(_ret_val);
				}
				global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor ret = _ret;
				return ret;
			}
		}

		internal static global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor GreaterThanOrEqual
		{
			get
			{
				object _ret_val = m_privateType.GetStaticField("GreaterThanOrEqual");
				global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor _ret = null;
				if ((_ret_val != null))
				{
					_ret = new global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor(_ret_val);
				}
				global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor ret = _ret;
				return ret;
			}
		}

		internal static global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor StartsWith
		{
			get
			{
				object _ret_val = m_privateType.GetStaticField("StartsWith");
				global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor _ret = null;
				if ((_ret_val != null))
				{
					_ret = new global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor(_ret_val);
				}
				global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor ret = _ret;
				return ret;
			}
		}

		internal static global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor EndsWith
		{
			get
			{
				object _ret_val = m_privateType.GetStaticField("EndsWith");
				global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor _ret = null;
				if ((_ret_val != null))
				{
					_ret = new global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor(_ret_val);
				}
				global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor ret = _ret;
				return ret;
			}
		}

		internal static global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor Contains
		{
			get
			{
				object _ret_val = m_privateType.GetStaticField("Contains");
				global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor _ret = null;
				if ((_ret_val != null))
				{
					_ret = new global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor(_ret_val);
				}
				global::SenseNet.ContentRepository.Tests.SenseNet_ContentRepository_Storage_Search_OperatorAccessor ret = _ret;
				return ret;
			}
		}
	}






	[System.Diagnostics.DebuggerStepThrough()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
	internal class BaseAccessor
	{

		protected Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject m_privateObject;

		protected BaseAccessor(object target, Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType type)
		{
			m_privateObject = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject(target, type);
		}

		protected BaseAccessor(Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType type) :
			this(null, type)
		{
		}

		internal virtual object Target
		{
			get
			{
				return m_privateObject.Target;
			}
		}

		public override string ToString()
		{
			return this.Target.ToString();
		}

		public override bool Equals(object obj)
		{
			if (typeof(BaseAccessor).IsInstanceOfType(obj))
			{
				obj = ((BaseAccessor)(obj)).Target;
			}
			return this.Target.Equals(obj);
		}

		public override int GetHashCode()
		{
			return this.Target.GetHashCode();
		}
	}
	[System.Diagnostics.DebuggerStepThrough()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
	internal class SenseNet_Portal_PageTemplateManagerAccessor : BaseAccessor
	{

		protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("SenseNet.Portal", "SenseNet.Portal.PageTemplateManager");

		internal SenseNet_Portal_PageTemplateManagerAccessor(object target) :
			base(target, m_privateType)
		{
		}

		internal global::SenseNet.Portal.MasterPage _masterPage
		{
			get
			{
				global::SenseNet.Portal.MasterPage ret = ((global::SenseNet.Portal.MasterPage)(m_privateObject.GetField("_masterPage")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_masterPage", value);
			}
		}

		internal global::SenseNet.Portal.PageTemplate _pageTemplate
		{
			get
			{
				global::SenseNet.Portal.PageTemplate ret = ((global::SenseNet.Portal.PageTemplate)(m_privateObject.GetField("_pageTemplate")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_pageTemplate", value);
			}
		}

		internal global::System.IO.Stream _oldStream
		{
			get
			{
				global::System.IO.Stream ret = ((global::System.IO.Stream)(m_privateObject.GetField("_oldStream")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_oldStream", value);
			}
		}

		internal bool _isZoneChange
		{
			get
			{
				bool ret = ((bool)(m_privateObject.GetField("_isZoneChange")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_isZoneChange", value);
			}
		}

		internal static string ASPXCONTENTTYPE
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("ASPXCONTENTTYPE")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("ASPXCONTENTTYPE", value);
			}
		}

		internal static string TEMPLATE
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("TEMPLATE")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("TEMPLATE", value);
			}
		}

		internal static string MAINPATH
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("MAINPATH")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("MAINPATH", value);
			}
		}

		internal static string MASTERPATH
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("MASTERPATH")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("MASTERPATH", value);
			}
		}

		internal static string TMPPATH
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("TMPPATH")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("TMPPATH", value);
			}
		}

		internal static string DOUBLEDOT
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("DOUBLEDOT")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("DOUBLEDOT", value);
			}
		}

		internal static string HTML
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("HTML")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("HTML", value);
			}
		}

		internal static string ASPX
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("ASPX")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("ASPX", value);
			}
		}

		internal static string MASTER
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("MASTER")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("MASTER", value);
			}
		}

		internal static string FORMSTART
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("FORMSTART")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("FORMSTART", value);
			}
		}

		internal static string FORMEND
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("FORMEND")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("FORMEND", value);
			}
		}

		internal static string SCRIPTMANAGER
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("SCRIPTMANAGER")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("SCRIPTMANAGER", value);
			}
		}

		internal static string WEBPARTMANAGER
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("WEBPARTMANAGER")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("WEBPARTMANAGER", value);
			}
		}

		internal static string WEBPARTZONE
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("WEBPARTZONE")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("WEBPARTZONE", value);
			}
		}

		internal static string ASPXHEADER
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("ASPXHEADER")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("ASPXHEADER", value);
			}
		}

		internal static string MASTERHEADER
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("MASTERHEADER")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("MASTERHEADER", value);
			}
		}

		internal static string PLACEHOLDER
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("PLACEHOLDER")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("PLACEHOLDER", value);
			}
		}

		internal static string PAGEEDIT
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("PAGEEDIT")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("PAGEEDIT", value);
			}
		}

		internal static string PAGECATALOG
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("PAGECATALOG")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("PAGECATALOG", value);
			}
		}

		internal global::SenseNet.Portal.PageTemplate PageTemplateNode
		{
			get
			{
				global::SenseNet.Portal.PageTemplate ret = ((global::SenseNet.Portal.PageTemplate)(m_privateObject.GetProperty("PageTemplateNode")));
				return ret;
			}
			set
			{
				m_privateObject.SetProperty("PageTemplateNode", value);
			}
		}

		internal global::System.IO.Stream OldStream
		{
			get
			{
				global::System.IO.Stream ret = ((global::System.IO.Stream)(m_privateObject.GetProperty("OldStream")));
				return ret;
			}
			set
			{
				m_privateObject.SetProperty("OldStream", value);
			}
		}

		internal string FileName
		{
			get
			{
				string ret = ((string)(m_privateObject.GetProperty("FileName")));
				return ret;
			}
		}

		internal static string zoneStartElement
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("zoneStartElement")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("zoneStartElement", value);
			}
		}

		internal static string zoneEndElement
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("zoneEndElement")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("zoneEndElement", value);
			}
		}

		internal static string editStartElement
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("editStartElement")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("editStartElement", value);
			}
		}

		internal static string editEndElement
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("editEndElement")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("editEndElement", value);
			}
		}

		internal static string catalogStartElement
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("catalogStartElement")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("catalogStartElement", value);
			}
		}

		internal static string catalogEndElement
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("catalogEndElement")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("catalogEndElement", value);
			}
		}

		internal static void GetBinaryData(int pageTemplateId, global::System.IO.Stream oldStream)
		{
			object[] args = new object[] {
                pageTemplateId,
                oldStream};
			m_privateType.InvokeStatic("GetBinaryData", new System.Type[] {
                    typeof(int),
                    typeof(global::System.IO.Stream)}, args);
		}

		internal static global::SenseNet.ContentRepository.Storage.BinaryData GetPageBinaryData(global::SenseNet.Portal.Page page, global::SenseNet.Portal.PageTemplate pageTemplate)
		{
			object[] args = new object[] {
                page,
                pageTemplate};
			global::SenseNet.ContentRepository.Storage.BinaryData ret = ((global::SenseNet.ContentRepository.Storage.BinaryData)(m_privateType.InvokeStatic("GetPageBinaryData", new System.Type[] {
                    typeof(global::SenseNet.Portal.Page),
                    typeof(global::SenseNet.Portal.PageTemplate)}, args)));
			return ret;
		}

		internal void GenerateBinaryData()
		{
			object[] args = new object[0];
			m_privateObject.Invoke("GenerateBinaryData", new System.Type[0], args);
		}

		internal void GeneratePage(string oldPageTmp, string pageTmp, string fileName)
		{
			object[] args = new object[] {
                oldPageTmp,
                pageTmp,
                fileName};
			m_privateObject.Invoke("GeneratePage", new System.Type[] {
                    typeof(string),
                    typeof(string),
                    typeof(string)}, args);
		}

		internal void CreateASPX(string pageTmp, string fileName)
		{
			object[] args = new object[] {
                pageTmp,
                fileName};
			m_privateObject.Invoke("CreateASPX", new System.Type[] {
                    typeof(string),
                    typeof(string)}, args);
		}

		internal void CreateASPX(string pageTmp, string fileName, global::SenseNet.Portal.Page page, string fileString)
		{
			object[] args = new object[] {
                pageTmp,
                fileName,
                page,
                fileString};
			m_privateObject.Invoke("CreateASPX", new System.Type[] {
                    typeof(string),
                    typeof(string),
                    typeof(global::SenseNet.Portal.Page),
                    typeof(string)}, args);
		}

		internal static void CreatePage(global::SenseNet.Portal.Page page, string fileString, global::System.Text.StringBuilder aspx, System.Collections.Generic.IList<object> fragments)
		{
			object[] args = new object[] {
                page,
                fileString,
                aspx,
                fragments};
			m_privateType.InvokeStatic("CreatePage", new System.Type[] {
                    typeof(global::SenseNet.Portal.Page),
                    typeof(string),
                    typeof(global::System.Text.StringBuilder),
                    typeof(System.Collections.Generic.IList<object>)}, args);
		}

		internal void CreateNewPage(global::System.Text.StringBuilder aspx, string fileName, System.Collections.Generic.IList<object> fragments)
		{
			object[] args = new object[] {
                aspx,
                fileName,
                fragments};
			m_privateObject.Invoke("CreateNewPage", new System.Type[] {
                    typeof(global::System.Text.StringBuilder),
                    typeof(string),
                    typeof(System.Collections.Generic.IList<object>)}, args);
		}

		internal static string GetPageSiteUrl(global::SenseNet.Portal.Page page)
		{
			object[] args = new object[] {
                page};
			string ret = ((string)(m_privateType.InvokeStatic("GetPageSiteUrl", new System.Type[] {
                    typeof(global::SenseNet.Portal.Page)}, args)));
			return ret;
		}

		internal static void AddPageZone(System.Collections.Generic.IList<object> fragASPX, System.Collections.Generic.IList<object> fragments, global::System.Text.StringBuilder aspx)
		{
			object[] args = new object[] {
                fragASPX,
                fragments,
                aspx};
			m_privateType.InvokeStatic("AddPageZone", new System.Type[] {
                    typeof(System.Collections.Generic.IList<object>),
                    typeof(System.Collections.Generic.IList<object>),
                    typeof(global::System.Text.StringBuilder)}, args);
		}

		internal static void AddContentZone(System.Collections.Generic.IList<object> fragASPX, System.Collections.Generic.IList<object> fragments, global::System.Text.StringBuilder aspx)
		{
			object[] args = new object[] {
                fragASPX,
                fragments,
                aspx};
			m_privateType.InvokeStatic("AddContentZone", new System.Type[] {
                    typeof(System.Collections.Generic.IList<object>),
                    typeof(System.Collections.Generic.IList<object>),
                    typeof(global::System.Text.StringBuilder)}, args);
		}

		internal static void SavePage(global::SenseNet.Portal.Page page, string textData)
		{
			object[] args = new object[] {
                page,
                textData};
			m_privateType.InvokeStatic("SavePage", new System.Type[] {
                    typeof(global::SenseNet.Portal.Page),
                    typeof(string)}, args);
		}

        //internal global::SenseNet.Portal.Page SaveNewPage(string fileName, global::SenseNet.ContentRepository.FolderBase parent)
        //{
        //    object[] args = new object[] {
        //        fileName,
        //        parent};
        //    global::SenseNet.Portal.Page ret = ((global::SenseNet.Portal.Page)(m_privateObject.Invoke("SaveNewPage", new System.Type[] {
        //            typeof(string),
        //            typeof(global::SenseNet.ContentRepository.FolderBase)}, args)));
        //    return ret;
        //}

		internal void SaveNewPageBinary(global::SenseNet.Portal.Page page, string textData)
		{
			object[] args = new object[] {
                page,
                textData};
			m_privateObject.Invoke("SaveNewPageBinary", new System.Type[] {
                    typeof(global::SenseNet.Portal.Page),
                    typeof(string)}, args);
		}

		internal static bool ZoneExist(System.Collections.Generic.IList<object> fragments, string name)
		{
			object[] args = new object[] {
                fragments,
                name};
			bool ret = ((bool)(m_privateType.InvokeStatic("ZoneExist", new System.Type[] {
                    typeof(System.Collections.Generic.IList<object>),
                    typeof(string)}, args)));
			return ret;
		}

		internal static System.Collections.Generic.IList<object> SplitASPX(string template)
		{
			object[] args = new object[] {
                template};
			System.Collections.Generic.IList<object> ret = ((System.Collections.Generic.IList<object>)(m_privateType.InvokeStatic("SplitASPX", new System.Type[] {
                    typeof(string)}, args)));
			return ret;
		}

		internal static global::SenseNet.ContentRepository.Tests.SenseNet_Portal_UI_ContentZoneAccessor GetContentZone(string template, int zonePos, int zoneEndPos)
		{
			object[] args = new object[] {
                template,
                zonePos,
                zoneEndPos};
			object _ret_val = m_privateType.InvokeStatic("GetContentZone", new System.Type[] {
                    typeof(string),
                    typeof(int),
                    typeof(int)}, args);
			global::SenseNet.ContentRepository.Tests.SenseNet_Portal_UI_ContentZoneAccessor _ret = null;
			if ((_ret_val != null))
			{
				_ret = new global::SenseNet.ContentRepository.Tests.SenseNet_Portal_UI_ContentZoneAccessor(_ret_val);
			}
			global::SenseNet.ContentRepository.Tests.SenseNet_Portal_UI_ContentZoneAccessor ret = _ret;
			return ret;
		}

		internal System.Collections.Generic.IList<object> SplitPageTemplate(string pageTmp)
		{
			object[] args = new object[] {
                pageTmp};
			System.Collections.Generic.IList<object> ret = ((System.Collections.Generic.IList<object>)(m_privateObject.Invoke("SplitPageTemplate", new System.Type[] {
                    typeof(string)}, args)));
			return ret;
		}

		internal static object GetNewElement(string posType, string name)
		{
			object[] args = new object[] {
                posType,
                name};
			object ret = ((object)(m_privateType.InvokeStatic("GetNewElement", new System.Type[] {
                    typeof(string),
                    typeof(string)}, args)));
			return ret;
		}

		internal static string GetEnd(string posType)
		{
			object[] args = new object[] {
                posType};
			string ret = ((string)(m_privateType.InvokeStatic("GetEnd", new System.Type[] {
                    typeof(string)}, args)));
			return ret;
		}

		internal static int GetSmallest(string pageTmp, int pos, out string posType)
		{
			object[] args = new object[] {
                pageTmp,
                pos,
                null};
			int ret = ((int)(m_privateType.InvokeStatic("GetSmallest", new System.Type[] {
                    typeof(string),
                    typeof(int),
                    typeof(string).MakeByRefType()}, args)));
			posType = ((string)(args[2]));
			return ret;
		}

		internal System.Collections.Generic.IEnumerable<SenseNet.ContentRepository.Storage.Node> LoadPageList()
		{
			object[] args = new object[0];
            System.Collections.Generic.IEnumerable<SenseNet.ContentRepository.Storage.Node> ret = ((System.Collections.Generic.IEnumerable<SenseNet.ContentRepository.Storage.Node>)(m_privateObject.Invoke("LoadPageList", new System.Type[0], args)));
			return ret;
		}

		internal void CreateMaster(string oldTemplate, string template, string fileName)
		{
			object[] args = new object[] {
                oldTemplate,
                template,
                fileName};
			m_privateObject.Invoke("CreateMaster", new System.Type[] {
                    typeof(string),
                    typeof(string),
                    typeof(string)}, args);
		}

		internal void SaveMasterPage(string fileName, string path, string textData)
		{
			object[] args = new object[] {
                fileName,
                path,
                textData};
			m_privateObject.Invoke("SaveMasterPage", new System.Type[] {
                    typeof(string),
                    typeof(string),
                    typeof(string)}, args);
		}

		internal void SaveMasterPage(global::SenseNet.Portal.MasterPage masterPage, string textData)
		{
			object[] args = new object[] {
                masterPage,
                textData};
			m_privateObject.Invoke("SaveMasterPage", new System.Type[] {
                    typeof(global::SenseNet.Portal.MasterPage),
                    typeof(string)}, args);
		}

		internal global::SenseNet.Portal.MasterPage GetMasterPageByPath(string path, string name)
		{
			object[] args = new object[] {
                path,
                name};
			global::SenseNet.Portal.MasterPage ret = ((global::SenseNet.Portal.MasterPage)(m_privateObject.Invoke("GetMasterPageByPath", new System.Type[] {
                    typeof(string),
                    typeof(string)}, args)));
			return ret;
		}

		internal void SavePageTemplate(string fileName, string path, string textData)
		{
			object[] args = new object[] {
                fileName,
                path,
                textData};
			m_privateObject.Invoke("SavePageTemplate", new System.Type[] {
                    typeof(string),
                    typeof(string),
                    typeof(string)}, args);
		}

		internal global::SenseNet.Portal.PageTemplate GetPageTemplateByPath(string path, string name)
		{
			object[] args = new object[] {
                path,
                name};
			global::SenseNet.Portal.PageTemplate ret = ((global::SenseNet.Portal.PageTemplate)(m_privateObject.Invoke("GetPageTemplateByPath", new System.Type[] {
                    typeof(string),
                    typeof(string)}, args)));
			return ret;
		}

        //internal static global::SenseNet.ContentRepository.Storage.Node GetExistNode(global::SenseNet.ContentRepository.FolderBase folder, string name)
        //{
        //    object[] args = new object[] {
        //        folder,
        //        name};
        //    global::SenseNet.ContentRepository.Storage.Node ret = ((global::SenseNet.ContentRepository.Storage.Node)(m_privateType.InvokeStatic("GetExistNode", new System.Type[] {
        //            typeof(global::SenseNet.ContentRepository.FolderBase),
        //            typeof(string)}, args)));
        //    return ret;
        //}

		internal static void SavePageTemplate(global::SenseNet.Portal.PageTemplate pageTemplate, string textData)
		{
			object[] args = new object[] {
                pageTemplate,
                textData};
			m_privateType.InvokeStatic("SavePageTemplate", new System.Type[] {
                    typeof(global::SenseNet.Portal.PageTemplate),
                    typeof(string)}, args);
		}

		internal static string ChangeHead(string tmp)
		{
			object[] args = new object[] {
                tmp};
			string ret = ((string)(m_privateType.InvokeStatic("ChangeHead", new System.Type[] {
                    typeof(string)}, args)));
			return ret;
		}

		internal static string AddForm(string tmp)
		{
			object[] args = new object[] {
                tmp};
			string ret = ((string)(m_privateType.InvokeStatic("AddForm", new System.Type[] {
                    typeof(string)}, args)));
			return ret;
		}

		//internal static string GetStreamString(global::System.IO.Stream stream) {
		//    object[] args = new object[] {
		//            stream};
		//    string ret = ((string)(m_privateType.InvokeStatic("GetStreamString", new System.Type[] {
		//                typeof(global::System.IO.Stream)}, args)));
		//    return ret;
		//}

		//internal static global::System.IO.Stream GetStreamFromString(string textData) {
		//    object[] args = new object[] {
		//            textData};
		//    global::System.IO.Stream ret = ((global::System.IO.Stream)(m_privateType.InvokeStatic("GetStreamFromString", new System.Type[] {
		//                typeof(string)}, args)));
		//    return ret;
		//}

		internal string GetFileNameWithoutExt()
		{
			object[] args = new object[0];
			string ret = ((string)(m_privateObject.Invoke("GetFileNameWithoutExt", new System.Type[0], args)));
			return ret;
		}

		internal static string GetFileNameWithoutExt(string fileName)
		{
			object[] args = new object[] {
                fileName};
			string ret = ((string)(m_privateType.InvokeStatic("GetFileNameWithoutExt", new System.Type[] {
                    typeof(string)}, args)));
			return ret;
		}

		internal static string GetFileNameExtension(string fileName)
		{
			object[] args = new object[] {
                fileName};
			string ret = ((string)(m_privateType.InvokeStatic("GetFileNameExtension", new System.Type[] {
                    typeof(string)}, args)));
			return ret;
		}

		internal static bool CheckPageTemplateBinaryStream(global::SenseNet.Portal.PageTemplate pageTemplate)
		{
			object[] args = new object[] {
                pageTemplate};
			bool ret = ((bool)(m_privateType.InvokeStatic("CheckPageTemplateBinaryStream", new System.Type[] {
                    typeof(global::SenseNet.Portal.PageTemplate)}, args)));
			return ret;
		}

		internal global::SenseNet.ContentRepository.Storage.BinaryData GetASPXBinaryByPageTemplate(global::SenseNet.Portal.Page page, global::SenseNet.Portal.PageTemplate pageTemplate)
		{
			object[] args = new object[] {
                page,
                pageTemplate};
			global::SenseNet.ContentRepository.Storage.BinaryData ret = ((global::SenseNet.ContentRepository.Storage.BinaryData)(m_privateObject.Invoke("GetASPXBinaryByPageTemplate", new System.Type[] {
                    typeof(global::SenseNet.Portal.Page),
                    typeof(global::SenseNet.Portal.PageTemplate)}, args)));
			return ret;
		}

		internal static object CreatePrivate()
		{
			Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject("SenseNet.Portal", "SenseNet.Portal.PageTemplateManager", new object[0]);
			return priv_obj.Target;
		}
	}
	[System.Diagnostics.DebuggerStepThrough()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
	internal class SenseNet_Portal_UI_ContentZoneAccessor : BaseAccessor
	{

		protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("SenseNet.Portal", "SenseNet.Portal.UI.ContentZone");

		internal SenseNet_Portal_UI_ContentZoneAccessor(object target) :
			base(target, m_privateType)
		{
		}

		internal string _contentPlaceHolderID
		{
			get
			{
				string ret = ((string)(m_privateObject.GetField("_contentPlaceHolderID")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_contentPlaceHolderID", value);
			}
		}

		internal string ContentPlaceHolderID
		{
			get
			{
				string ret = ((string)(m_privateObject.GetProperty("ContentPlaceHolderID")));
				return ret;
			}
			set
			{
				m_privateObject.SetProperty("ContentPlaceHolderID", value);
			}
		}

		internal string _ID
		{
			get
			{
				string ret = ((string)(m_privateObject.GetField("_ID")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_ID", value);
			}
		}

		internal string ID
		{
			get
			{
				string ret = ((string)(m_privateObject.GetProperty("ID")));
				return ret;
			}
			set
			{
				m_privateObject.SetProperty("ID", value);
			}
		}

		internal string _innerXml
		{
			get
			{
				string ret = ((string)(m_privateObject.GetField("_innerXml")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_innerXml", value);
			}
		}

		internal string InnerXml
		{
			get
			{
				string ret = ((string)(m_privateObject.GetProperty("InnerXml")));
				return ret;
			}
			set
			{
				m_privateObject.SetProperty("InnerXml", value);
			}
		}

		internal string _zoneID
		{
			get
			{
				string ret = ((string)(m_privateObject.GetField("_zoneID")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_zoneID", value);
			}
		}

		internal string ZoneID
		{
			get
			{
				string ret = ((string)(m_privateObject.GetProperty("ZoneID")));
				return ret;
			}
			set
			{
				m_privateObject.SetProperty("ZoneID", value);
			}
		}

		internal static object CreatePrivate(string contentPlaceHolderID, string ID, string innerXml, string zoneID)
		{
			object[] args = new object[] {
                contentPlaceHolderID,
                ID,
                innerXml,
                zoneID};
			Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject("SenseNet.Portal", "SenseNet.Portal.UI.ContentZone", new System.Type[] {
                    typeof(string),
                    typeof(string),
                    typeof(string),
                    typeof(string)}, args);
			return priv_obj.Target;
		}
	}
	[System.Diagnostics.DebuggerStepThrough()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
	internal class SenseNet_Portal_UI_PageZoneAccessor : BaseAccessor
	{

		protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("SenseNet.Portal", "SenseNet.Portal.UI.PageZone");

		internal SenseNet_Portal_UI_PageZoneAccessor(object target) :
			base(target, m_privateType)
		{
		}

		internal string _name
		{
			get
			{
				string ret = ((string)(m_privateObject.GetField("_name")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_name", value);
			}
		}

		internal string Name
		{
			get
			{
				string ret = ((string)(m_privateObject.GetProperty("Name")));
				return ret;
			}
			set
			{
				m_privateObject.SetProperty("Name", value);
			}
		}

		internal static object CreatePrivate(string name)
		{
			object[] args = new object[] {
                name};
			Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject("SenseNet.Portal", "SenseNet.Portal.UI.PageZone", new System.Type[] {
                    typeof(string)}, args);
			return priv_obj.Target;
		}
	}
	[System.Diagnostics.DebuggerStepThrough()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
	internal class SenseNet_Portal_UrlNameValidatorAccessor : BaseAccessor
	{

		protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("SenseNet.Portal", "SenseNet.Portal.UrlNameValidator");

		internal SenseNet_Portal_UrlNameValidatorAccessor(object target) :
			base(target, m_privateType)
		{
		}

		internal static global::System.Collections.Hashtable _characterTable
		{
			get
			{
				global::System.Collections.Hashtable ret = ((global::System.Collections.Hashtable)(m_privateType.GetStaticField("_characterTable")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("_characterTable", value);
			}
		}

		internal static bool Validate(string url)
		{
			object[] args = new object[] {
                url};
			bool ret = ((bool)(m_privateType.InvokeStatic("Validate", new System.Type[] {
                    typeof(string)}, args)));
			return ret;
		}

		internal static string ValidUrlName(string urlName)
		{
			object[] args = new object[] {
                urlName};
			string ret = ((string)(m_privateType.InvokeStatic("ValidUrlName", new System.Type[] {
                    typeof(string)}, args)));
			return ret;
		}

		internal static string ConvertSpecChars(string spec)
		{
			object[] args = new object[] {
                spec};
			string ret = ((string)(m_privateType.InvokeStatic("ConvertSpecChars", new System.Type[] {
                    typeof(string)}, args)));
			return ret;
		}

		internal static string ToUnichar(string HexString)
		{
			object[] args = new object[] {
                HexString};
			string ret = ((string)(m_privateType.InvokeStatic("ToUnichar", new System.Type[] {
                    typeof(string)}, args)));
			return ret;
		}

		internal static void InitializeCharacterTable()
		{
			object[] args = new object[0];
			m_privateType.InvokeStatic("InitializeCharacterTable", new System.Type[0], args);
		}

		internal static object CreatePrivate()
		{
			Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject("SenseNet.Portal", "SenseNet.Portal.UrlNameValidator", new object[0]);
			return priv_obj.Target;
		}
	}
	[System.Diagnostics.DebuggerStepThrough()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
	internal class SenseNet_Portal_Personalization_TextFilePersonalizationProviderAccessor : BaseAccessor
	{

		protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType(typeof(global::SenseNet.Portal.Personalization.SenseNetPersonalizationProvider));

		internal SenseNet_Portal_Personalization_TextFilePersonalizationProviderAccessor(global::SenseNet.Portal.Personalization.SenseNetPersonalizationProvider target) :
			base(target, m_privateType)
		{
		}

		internal void LoadPersonalizationBlobs(global::System.Web.UI.WebControls.WebParts.WebPartManager webPartManager, string path, string userName, ref byte[] sharedDataBlob, ref byte[] userDataBlob)
		{
			object[] args = new object[] {
                webPartManager,
                path,
                userName,
                sharedDataBlob,
                userDataBlob};
			m_privateObject.Invoke("LoadPersonalizationBlobs", new System.Type[] {
                    typeof(global::System.Web.UI.WebControls.WebParts.WebPartManager),
                    typeof(string),
                    typeof(string),
                    typeof(byte).MakeArrayType().MakeByRefType(),
                    typeof(byte).MakeArrayType().MakeByRefType()}, args);
			sharedDataBlob = ((byte[])(args[3]));
			userDataBlob = ((byte[])(args[4]));
		}

		internal void SavePersonalizationBlob(global::System.Web.UI.WebControls.WebParts.WebPartManager webPartManager, string path, string userName, byte[] dataBlob)
		{
			object[] args = new object[] {
                webPartManager,
                path,
                userName,
                dataBlob};
			m_privateObject.Invoke("SavePersonalizationBlob", new System.Type[] {
                    typeof(global::System.Web.UI.WebControls.WebParts.WebPartManager),
                    typeof(string),
                    typeof(string),
                    typeof(byte).MakeArrayType()}, args);
		}

		internal void ResetPersonalizationBlob(global::System.Web.UI.WebControls.WebParts.WebPartManager webPartManager, string path, string userName)
		{
			object[] args = new object[] {
                webPartManager,
                path,
                userName};
			m_privateObject.Invoke("ResetPersonalizationBlob", new System.Type[] {
                    typeof(global::System.Web.UI.WebControls.WebParts.WebPartManager),
                    typeof(string),
                    typeof(string)}, args);
		}
	}


	[System.Diagnostics.DebuggerStepThrough()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
	internal class SenseNet_ContentRepository_Versioning_ContentStateMachineAccessor : BaseAccessor
	{

		protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType("SenseNet.ContentRepository", "SenseNet.ContentRepository.Versioning.ContentStateMachine");

		internal SenseNet_ContentRepository_Versioning_ContentStateMachineAccessor(object target) :
			base(target, m_privateType)
		{
		}

		internal static string STATETABLE
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("STATETABLE")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("STATETABLE", value);
			}
		}

		internal global::System.Xml.XmlTextReader _tableParser
		{
			get
			{
				global::System.Xml.XmlTextReader ret = ((global::System.Xml.XmlTextReader)(m_privateObject.GetField("_tableParser")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_tableParser", value);
			}
		}

		internal global::System.Xml.XmlTextReader TableParser
		{
			get
			{
				global::System.Xml.XmlTextReader ret = ((global::System.Xml.XmlTextReader)(m_privateObject.GetProperty("TableParser")));
				return ret;
			}
		}

		internal global::SenseNet.ContentRepository.Versioning.VersioningType _type
		{
			get
			{
				global::SenseNet.ContentRepository.Versioning.VersioningType ret = ((global::SenseNet.ContentRepository.Versioning.VersioningType)(m_privateObject.GetField("_type")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_type", value);
			}
		}

		internal global::SenseNet.ContentRepository.Storage.VersionStatus _status
		{
			get
			{
				global::SenseNet.ContentRepository.Storage.VersionStatus ret = ((global::SenseNet.ContentRepository.Storage.VersionStatus)(m_privateObject.GetField("_status")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_status", value);
			}
		}

		internal global::SenseNet.ContentRepository.Versioning.StateAction _action
		{
			get
			{
				global::SenseNet.ContentRepository.Versioning.StateAction ret = ((global::SenseNet.ContentRepository.Versioning.StateAction)(m_privateObject.GetField("_action")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_action", value);
			}
		}

		internal static object CreatePrivate(global::SenseNet.ContentRepository.Versioning.VersioningType type, global::SenseNet.ContentRepository.Storage.VersionStatus status, global::SenseNet.ContentRepository.Versioning.StateAction action)
		{
			object[] args = new object[] {
                type,
                status,
                action};
			Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject("SenseNet.ContentRepository", "SenseNet.ContentRepository.Versioning.ContentStateMachine", new System.Type[] {
                    typeof(global::SenseNet.ContentRepository.Versioning.VersioningType),
                    typeof(global::SenseNet.ContentRepository.Storage.VersionStatus),
                    typeof(global::SenseNet.ContentRepository.Versioning.StateAction)}, args);
			return priv_obj.Target;
		}

		internal void GetNextState()
		{
			object[] args = new object[0];
			m_privateObject.Invoke("GetNextState", new System.Type[0], args);
		}
	}
	[System.Diagnostics.DebuggerStepThrough()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
	internal class SenseNet_Portal_Virtualization_PortalContextAccessor : BaseAccessor
	{

		protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType(typeof(global::SenseNet.Portal.Virtualization.PortalContext));

		internal SenseNet_Portal_Virtualization_PortalContextAccessor(global::SenseNet.Portal.Virtualization.PortalContext target) :
			base(target, m_privateType)
		{
		}

		internal static string CONTEXT_ITEM_KEY
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("CONTEXT_ITEM_KEY")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("CONTEXT_ITEM_KEY", value);
			}
		}

		internal static string QUERYSTRING_NODEPROPERTY_KEY
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("QUERYSTRING_NODEPROPERTY_KEY")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("QUERYSTRING_NODEPROPERTY_KEY", value);
			}
		}

		internal static string DefaultNodeProperty
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("DefaultNodePropertyName")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("DefaultNodePropertyName", value);
			}
		}

		internal static string InRepositoryPageSuffix
		{
			get
			{
				string ret = ((string)(m_privateType.GetStaticField("InRepositoryPageSuffix")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("InRepositoryPageSuffix", value);
			}
		}

		internal static object m_SitesLock
		{
			get
			{
				object ret = ((object)(m_privateType.GetStaticField("m_SitesLock")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("m_SitesLock", value);
			}
		}

		internal static System.Collections.Generic.Dictionary<string, SenseNet.Portal.Site> Sites
		{
			get
			{
				System.Collections.Generic.Dictionary<string, SenseNet.Portal.Site> ret = ((System.Collections.Generic.Dictionary<string, SenseNet.Portal.Site>)(m_privateType.GetStaticProperty("Sites")));
				return ret;
			}
		}

		internal static global::System.Collections.Specialized.NameValueCollection _urlPaths
		{
			get
			{
				global::System.Collections.Specialized.NameValueCollection ret = ((global::System.Collections.Specialized.NameValueCollection)(m_privateType.GetStaticField("_urlPaths")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("_urlPaths", value);
			}
		}

		internal static global::System.Collections.Specialized.NameValueCollection _startPages
		{
			get
			{
				global::System.Collections.Specialized.NameValueCollection ret = ((global::System.Collections.Specialized.NameValueCollection)(m_privateType.GetStaticField("_startPages")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("_startPages", value);
			}
		}

		internal static global::System.Collections.Specialized.NameValueCollection _authTypes
		{
			get
			{
				global::System.Collections.Specialized.NameValueCollection ret = ((global::System.Collections.Specialized.NameValueCollection)(m_privateType.GetStaticField("_authTypes")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("_authTypes", value);
			}
		}

		internal static global::System.Collections.Specialized.NameValueCollection _loginPages
		{
			get
			{
				global::System.Collections.Specialized.NameValueCollection ret = ((global::System.Collections.Specialized.NameValueCollection)(m_privateType.GetStaticField("_loginPages")));
				return ret;
			}
			set
			{
				m_privateType.SetStaticField("_loginPages", value);
			}
		}

		internal global::System.Web.HttpContext _ownerHttpContext
		{
			get
			{
				global::System.Web.HttpContext ret = ((global::System.Web.HttpContext)(m_privateObject.GetField("_ownerHttpContext")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_ownerHttpContext", value);
			}
		}

		internal global::SenseNet.Portal.Site _site
		{
			get
			{
				global::SenseNet.Portal.Site ret = ((global::SenseNet.Portal.Site)(m_privateObject.GetField("_site")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_site", value);
			}
		}

		internal string _authenticationMode
		{
			get
			{
				string ret = ((string)(m_privateObject.GetField("_authenticationMode")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_authenticationMode", value);
			}
		}

		internal string _repositoryPath
		{
			get
			{
				string ret = ((string)(m_privateObject.GetField("_repositoryPath")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_repositoryPath", value);
			}
		}

		internal global::SenseNet.ContentRepository.Storage.Schema.NodeType _nodeType
		{
			get
			{
				global::SenseNet.ContentRepository.Storage.Schema.NodeType ret = ((global::SenseNet.ContentRepository.Storage.Schema.NodeType)(m_privateObject.GetField("_nodeType")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_nodeType", value);
			}
		}

		internal string _nodePropertyName
		{
			get
			{
				string ret = ((string)(m_privateObject.GetField("_nodePropertyName")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_nodePropertyName", value);
			}
		}

		internal global::System.Uri _originalUri
		{
			get
			{
				global::System.Uri ret = ((global::System.Uri)(m_privateObject.GetField("_originalUri")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_originalUri", value);
			}
		}

		internal string _siteUrl
		{
			get
			{
				string ret = ((string)(m_privateObject.GetField("_siteUrl")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_siteUrl", value);
			}
		}

		internal string _pageRepositoryPath
		{
			get
			{
				string ret = ((string)(m_privateObject.GetField("_pageRepositoryPath")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_pageRepositoryPath", value);
			}
		}

		internal global::SenseNet.Portal.Page _page
		{
			get
			{
				global::SenseNet.Portal.Page ret = ((global::SenseNet.Portal.Page)(m_privateObject.GetField("_page")));
				return ret;
			}
			set
			{
				m_privateObject.SetField("_page", value);
			}
		}

		internal static global::SenseNet.Portal.Virtualization.PortalContext Create(global::System.Web.HttpContext context)
		{
			object[] args = new object[] {
                context};
			global::SenseNet.Portal.Virtualization.PortalContext ret = ((global::SenseNet.Portal.Virtualization.PortalContext)(m_privateType.InvokeStatic("Create", new System.Type[] {
                    typeof(global::System.Web.HttpContext)}, args)));
			return ret;
		}

		internal static global::SenseNet.Portal.Virtualization.PortalContext CreatePrivate(global::System.Web.HttpContext context, string repositoryPath, global::SenseNet.ContentRepository.Storage.Schema.NodeType nodeType, string siteUrl)
		{
			object[] args = new object[] {
                context,
                repositoryPath,
                nodeType,
                siteUrl};
			Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject priv_obj = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject(typeof(global::SenseNet.Portal.Virtualization.PortalContext), new System.Type[] {
                    typeof(global::System.Web.HttpContext),
                    typeof(string),
                    typeof(global::SenseNet.ContentRepository.Storage.Schema.NodeType),
                    typeof(string)}, args);
			return ((global::SenseNet.Portal.Virtualization.PortalContext)(priv_obj.Target));
		}
	}
}