#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SenseNet.Search.Indexing
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SenseNetContentRepository")]
	public abstract partial class IndexingTasksDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertIndexingActivity(IndexingActivity instance);
    partial void UpdateIndexingActivity(IndexingActivity instance);
    partial void DeleteIndexingActivity(IndexingActivity instance);
    #endregion
		
		public IndexingTasksDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IndexingTasksDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IndexingTasksDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IndexingTasksDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<IndexingActivity> IndexingActivities
		{
			get
			{
				return this.GetTable<IndexingActivity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IndexingActivity")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class IndexingActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IndexingActivityId;
		
		private IndexingActivityType _ActivityType;
		
		private System.DateTime _CreationDate;
		
		private int _NodeId;
		
		private int _VersionId;
		
		private System.Nullable<bool> _SingleVersion;
		
		private System.Nullable<bool> _MoveOrRename;
		
		private System.Nullable<bool> _IsLastDraftValue;
		
		private string _Path;
		
		private System.Nullable<long> _VersionTimestamp;
		
		private System.Data.Linq.Binary _Hash;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIndexingActivityIdChanging(int value);
    partial void OnIndexingActivityIdChanged();
    partial void OnActivityTypeChanging(IndexingActivityType value);
    partial void OnActivityTypeChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnNodeIdChanging(int value);
    partial void OnNodeIdChanged();
    partial void OnVersionIdChanging(int value);
    partial void OnVersionIdChanged();
    partial void OnSingleVersionChanging(System.Nullable<bool> value);
    partial void OnSingleVersionChanged();
    partial void OnMoveOrRenameChanging(System.Nullable<bool> value);
    partial void OnMoveOrRenameChanged();
    partial void OnIsLastDraftValueChanging(System.Nullable<bool> value);
    partial void OnIsLastDraftValueChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnVersionTimestampChanging(System.Nullable<long> value);
    partial void OnVersionTimestampChanged();
    partial void OnHashChanging(System.Data.Linq.Binary value);
    partial void OnHashChanged();
    #endregion
		
		public IndexingActivity()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndexingActivityId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int IndexingActivityId
		{
			get
			{
				return this._IndexingActivityId;
			}
			set
			{
				if ((this._IndexingActivityId != value))
				{
					this.OnIndexingActivityIdChanging(value);
					this.SendPropertyChanging();
					this._IndexingActivityId = value;
					this.SendPropertyChanged("IndexingActivityId");
					this.OnIndexingActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityType", DbType="VarChar(50)", CanBeNull=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public IndexingActivityType ActivityType
		{
			get
			{
				return this._ActivityType;
			}
			set
			{
				if ((this._ActivityType != value))
				{
					this.OnActivityTypeChanging(value);
					this.SendPropertyChanging();
					this._ActivityType = value;
					this.SendPropertyChanged("ActivityType");
					this.OnActivityTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int NodeId
		{
			get
			{
				return this._NodeId;
			}
			set
			{
				if ((this._NodeId != value))
				{
					this.OnNodeIdChanging(value);
					this.SendPropertyChanging();
					this._NodeId = value;
					this.SendPropertyChanged("NodeId");
					this.OnNodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int VersionId
		{
			get
			{
				return this._VersionId;
			}
			set
			{
				if ((this._VersionId != value))
				{
					this.OnVersionIdChanging(value);
					this.SendPropertyChanging();
					this._VersionId = value;
					this.SendPropertyChanged("VersionId");
					this.OnVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingleVersion", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> SingleVersion
		{
			get
			{
				return this._SingleVersion;
			}
			set
			{
				if ((this._SingleVersion != value))
				{
					this.OnSingleVersionChanging(value);
					this.SendPropertyChanging();
					this._SingleVersion = value;
					this.SendPropertyChanged("SingleVersion");
					this.OnSingleVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveOrRename", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<bool> MoveOrRename
		{
			get
			{
				return this._MoveOrRename;
			}
			set
			{
				if ((this._MoveOrRename != value))
				{
					this.OnMoveOrRenameChanging(value);
					this.SendPropertyChanging();
					this._MoveOrRename = value;
					this.SendPropertyChanged("MoveOrRename");
					this.OnMoveOrRenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLastDraftValue", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> IsLastDraftValue
		{
			get
			{
				return this._IsLastDraftValue;
			}
			set
			{
				if ((this._IsLastDraftValue != value))
				{
					this.OnIsLastDraftValueChanging(value);
					this.SendPropertyChanging();
					this._IsLastDraftValue = value;
					this.SendPropertyChanged("IsLastDraftValue");
					this.OnIsLastDraftValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(450)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionTimestamp", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<long> VersionTimestamp
		{
			get
			{
				return this._VersionTimestamp;
			}
			set
			{
				if ((this._VersionTimestamp != value))
				{
					this.OnVersionTimestampChanging(value);
					this.SendPropertyChanging();
					this._VersionTimestamp = value;
					this.SendPropertyChanged("VersionTimestamp");
					this.OnVersionTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hash", DbType="VarBinary(50)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Data.Linq.Binary Hash
		{
			get
			{
				return this._Hash;
			}
			set
			{
				if ((this._Hash != value))
				{
					this.OnHashChanging(value);
					this.SendPropertyChanging();
					this._Hash = value;
					this.SendPropertyChanged("Hash");
					this.OnHashChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
