#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SenseNet.Portal.Workspaces
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SenseNetContentRepository")]
	public partial class WsJournalDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertJournalItem(JournalItem instance);
    partial void UpdateJournalItem(JournalItem instance);
    partial void DeleteJournalItem(JournalItem instance);
    #endregion
		
		public WsJournalDataContext() : 
				base("Data Source=GYEBROVSZKIZ01\\SQL2005;Initial Catalog=SenseNetContentRepository;Inte" +
						"grated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public WsJournalDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WsJournalDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WsJournalDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WsJournalDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<JournalItem> JournalItems
		{
			get
			{
				return this.GetTable<JournalItem>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JournalItems")]
	public partial class JournalItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _When;
		
		private string _Wherewith;
		
		private string _What;
		
		private string _Who;
		
		private int _NodeId;
		
		private string _DisplayName;
		
		private string _NodeTypeName;
		
		private string _SourcePath;
		
		private string _TargetPath;
		
		private string _TargetDisplayName;
		
		private bool _Hidden;
		
		private string _Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWhenChanging(System.DateTime value);
    partial void OnWhenChanged();
    partial void OnWherewithChanging(string value);
    partial void OnWherewithChanged();
    partial void OnWhatChanging(string value);
    partial void OnWhatChanged();
    partial void OnWhoChanging(string value);
    partial void OnWhoChanged();
    partial void OnNodeIdChanging(int value);
    partial void OnNodeIdChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnNodeTypeNameChanging(string value);
    partial void OnNodeTypeNameChanged();
    partial void OnSourcePathChanging(string value);
    partial void OnSourcePathChanged();
    partial void OnTargetPathChanging(string value);
    partial void OnTargetPathChanged();
    partial void OnTargetDisplayNameChanging(string value);
    partial void OnTargetDisplayNameChanged();
    partial void OnHiddenChanging(bool value);
    partial void OnHiddenChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public JournalItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[When]", Storage="_When", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime When
		{
			get
			{
				return this._When;
			}
			set
			{
				if ((this._When != value))
				{
					this.OnWhenChanging(value);
					this.SendPropertyChanging();
					this._When = value;
					this.SendPropertyChanged("When");
					this.OnWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wherewith", DbType="NVarChar(430) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Wherewith
		{
			get
			{
				return this._Wherewith;
			}
			set
			{
				if ((this._Wherewith != value))
				{
					this.OnWherewithChanging(value);
					this.SendPropertyChanging();
					this._Wherewith = value;
					this.SendPropertyChanged("Wherewith");
					this.OnWherewithChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_What", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string What
		{
			get
			{
				return this._What;
			}
			set
			{
				if ((this._What != value))
				{
					this.OnWhatChanging(value);
					this.SendPropertyChanging();
					this._What = value;
					this.SendPropertyChanged("What");
					this.OnWhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Who", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Who
		{
			get
			{
				return this._Who;
			}
			set
			{
				if ((this._Who != value))
				{
					this.OnWhoChanging(value);
					this.SendPropertyChanging();
					this._Who = value;
					this.SendPropertyChanged("Who");
					this.OnWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeId", DbType="Int NOT NULL")]
		public int NodeId
		{
			get
			{
				return this._NodeId;
			}
			set
			{
				if ((this._NodeId != value))
				{
					this.OnNodeIdChanging(value);
					this.SendPropertyChanging();
					this._NodeId = value;
					this.SendPropertyChanged("NodeId");
					this.OnNodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(450) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeTypeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NodeTypeName
		{
			get
			{
				return this._NodeTypeName;
			}
			set
			{
				if ((this._NodeTypeName != value))
				{
					this.OnNodeTypeNameChanging(value);
					this.SendPropertyChanging();
					this._NodeTypeName = value;
					this.SendPropertyChanged("NodeTypeName");
					this.OnNodeTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourcePath", DbType="NVarChar(450)")]
		public string SourcePath
		{
			get
			{
				return this._SourcePath;
			}
			set
			{
				if ((this._SourcePath != value))
				{
					this.OnSourcePathChanging(value);
					this.SendPropertyChanging();
					this._SourcePath = value;
					this.SendPropertyChanged("SourcePath");
					this.OnSourcePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetPath", DbType="NVarChar(450)")]
		public string TargetPath
		{
			get
			{
				return this._TargetPath;
			}
			set
			{
				if ((this._TargetPath != value))
				{
					this.OnTargetPathChanging(value);
					this.SendPropertyChanging();
					this._TargetPath = value;
					this.SendPropertyChanged("TargetPath");
					this.OnTargetPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDisplayName", DbType="NVarChar(450)")]
		public string TargetDisplayName
		{
			get
			{
				return this._TargetDisplayName;
			}
			set
			{
				if ((this._TargetDisplayName != value))
				{
					this.OnTargetDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._TargetDisplayName = value;
					this.SendPropertyChanged("TargetDisplayName");
					this.OnTargetDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="Bit")]
		public bool Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged("Hidden");
					this.OnHiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NVarChar(450)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
